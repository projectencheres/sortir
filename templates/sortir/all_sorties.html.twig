{% extends 'base.html.twig' %}

{% block title %}
    Liste des Sorties
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/sortie.css') }}">
{% endblock %}
    
{% block body %}
<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Liste des Sorties</h1>
        <a href="{{ path('app_sortie_create') }}" class="btn btn-success btn-sm">Créer une sortie</a>
    </div>

     <!-- Formulaire de filtre -->
    <div class="mb-4">
        {{ form_start(form, {'attr': {'class': 'row g-3'}}) }}
            <div class="col-md-3">
                {{ form_row(form.site) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.nom) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.dateDebut) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.dateFin) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.organisateur) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.inscrit) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.nonInscrit) }}
            </div>
            <div class="col-md-3">
                {{ form_row(form.passees) }}
            </div>
            {# <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Rechercher</button>
            </div> #}
        {{ form_end(form) }}
    </div>
    <div class="row">
        {% for sortie in sorties %}
            <div class="col-md-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <h5 class="card-title text-primary">{{ sortie.nom }}</h5>
                        <p class="card-text">
                            <strong>Date de début:</strong> {{ sortie.dateHeureDebut|date('d/m/Y H:i') }}<br>
                            <strong>Lieu:</strong> {{ sortie.lieu.nom ?? 'Non défini' }}<br>
                            <strong>État:</strong> <span class="badge bg-info">{{ sortie.etat }}</span><br>
                            <strong>Participants:</strong> {{ sortie.participants|length }} / {{ sortie.nbInscriptionsMax }}
                        </p>
                        <div class="d-flex justify-content-between flex-wrap">
                            {% if sortie.etat != 'Annulée' %}
                                {% if sortie.participants|length < sortie.nbInscriptionsMax %}
                                    {% if not sortie.participants.contains(app.user) %}
                                        <a href="{{ path('app_sortir_subscribe', {id: sortie.id}) }}" class="btn btn-primary btn-sm mb-2">S'inscrire</a>
                                    {% else %}
                                        <a href="#" class="btn btn-secondary btn-sm mb-2 disabled">Déjà inscrit</a>
                                    {% endif %}
                                {% else %}
                                    <a href="#" class="btn btn-secondary btn-sm mb-2 disabled">Complet</a>
                                {% endif %}
                            {% endif %}

                            {% if sortie.etat == 'Annulée' %}
                                <a href="#" class="btn btn-secondary btn-sm mb-2 disabled">Annulée</a>
                            {% endif %}
                            
                            {% if sortie.participants.contains(app.user) and sortie.dateHeureDebut > "now"|date %}
                                <a href="{{ path('app_sortir_unsubscribe', {id: sortie.id}) }}" class="btn btn-danger btn-sm mb-2">Désinscrire</a>
                            {% endif %}

                            <a href="{{ path('app_sortir_show', {id: sortie.id}) }}" class="btn btn-secondary btn-sm mb-2">Voir détails</a>

                            {% if app.user == sortie.organisateur and sortie.dateHeureDebut > "now"|date %}
                                <a href="#" class="btn btn-warning btn-sm mb-2">Modifier</a>
                                <a href="{{ path('app_sortir_delete', {id: sortie.id}) }}" class="btn btn-danger btn-sm mb-2">Supprimer</a>
                                {% if sortie.etat != 'Annulée' %}
                                    <a href="{{ path('app_sortir_cancel', {id: sortie.id}) }}" class="btn btn-danger btn-sm mb-2">Annuler</a>
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="col-12">
                <div class="alert alert-warning text-center">
                    Aucune sortie n'est disponible pour le moment.
                </div>
            </div>
        {% endfor %}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('[data-bs-toggle="modal"]').forEach(button => {
                button.addEventListener('click', (event) => {
                    const sortieId = button.getAttribute('data-id');
                    const modalContent = document.getElementById(`cancel-modal-content-${sortieId}`);

                    // Charger le contenu du formulaire via AJAX
                    fetch(`/sortie/cancel/${sortieId}`)
                        .then(response => response.text())
                        .then(html => {
                            modalContent.innerHTML = html;

                            // Gestion du formulaire dans le modal
                            const form = modalContent.querySelector('#cancel-form');
                            if (form) {
                                form.addEventListener('submit', (e) => {
                                    e.preventDefault();
                                    const formData = new FormData(form);

                                    fetch(form.action, {
                                        method: 'POST',
                                        body: formData,
                                    })
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.success) {
                                                alert(data.success);
                                                window.location.reload();
                                            } else if (data.error) {
                                                alert(data.error);
                                            }
                                        })
                                        .catch(error => console.error('Erreur :', error));
                                });
                            }
                        })
                        .catch(error => console.error('Erreur de chargement du formulaire :', error));
                });
            });
        });
    </script>
{% endblock %}
